buildscript {
    repositories {
        jcenter()
        maven {
            url = uri("https://packages.confluent.io/maven/")
        }
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
        maven {
            url = uri("https://jitpack.io")
        }
    }

    dependencies {
        classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.21.0"
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'com.github.eirnym.js2p' version '1.0'
    id "com.google.protobuf" version "0.8.13"
    id "com.github.imflog.kafka-schema-registry-gradle-plugin" version "1.0.0"
}

sourceCompatibility = "14"
targetCompatibility = "14"

repositories {
    jcenter()
}

apply plugin: "com.commercehub.gradle.plugin.avro"

dependencies {
    implementation "org.apache.avro:avro:1.10.0"
    implementation "com.kjetland:mbknor-jackson-jsonschema_2.13:1.0.39"
    implementation 'javax.validation:validation-api:1.1.0.CR2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.7'
    implementation "com.google.protobuf:protobuf-java:3.11.4"

    
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}

protobuf {
    generatedFilesBaseDir = "${project.buildDir}/generated-main-proto-java"
}

jsonSchema2Pojo {
    targetPackage = 'bbejeck.json.generated'
    generateBuilders = true
    source = files("${project.projectDir}/src/main/json")
    targetDirectory = file("${project.buildDir}/generated-main-json-java")
    includeJsr303Annotations = true
    propertyWordDelimiters = ['_'] as char[]
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}
